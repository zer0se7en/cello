# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-18.04'

variables:
  - group: credentials

stages:
- stage: PreCheck
  displayName: Check license and documents
  jobs:
  - job: CheckLicenseAndDocs
    steps:
    - template: ci/check-license-and-docs.yml

- stage: ProcessComponents
  displayName: ProcessComponents
  jobs:
  - template: ci/process-components.yml
    parameters:
      param:
      - name: dashandapi
        pretest: "dashandapi_pre.yml"
        posttest: "dashandapi_post.yml"
        images:
        - imagename: "hyperledger/cello-api-engine"
          dockerfile: "build_image/docker/common/api-engine/Dockerfile.in"
        - imagename: "hyperledger/cello-nginx"
          dockerfile: "build_image/docker/common/nginx/Dockerfile.in"
        - imagename: "hyperledger/cello-dashboard"
          dockerfile: "build_image/docker/common/dashboard/Dockerfile.in"
      - name: ansibleagent
        images:
        - imagename: "hyperledger/cello-ansible-agent"
          dockerfile: "build_image/docker/agent/ansible/Dockerfile.in"
#     - name: fabricoperator
#       images:
#       - imagename: "hyperledger/cello-k8s-operator-agent"
#         dockerfile: "src/agent/fabric-operator/agent/Dockerfile"
#       - imagename: "hyperledger/cello-k8s-operator-controller"
#         dockerfile: "src/agent/fabric-operator/Dockerfile"
